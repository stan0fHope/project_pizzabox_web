# on:
jobs:
  build: 
    runs-on: ubuntu-20.04 
    # which machine/environ like Ubuntu or so
    steps:
      # first pull in code to start
      - uses: actions/checkout@v2
      # now with the code, we can build
      - run: dotnet build

  # test: xunit + coverlet
  test:
    needs: #not fully needed unless trust issues
      - build
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2 #git checkout
      - run dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
      # CollectCoverage is how we collect the report, OutputFormat genereates the report (reportgenerator)

    # analyze: sonarcloud = (static code anaylsis)    
    # act after test
    analyze: 
      needs: 
        - build
        - test
      # env:
      #   SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}      
      runs-on: ubuntu-16.04
      steps:
        - uses: actions/checkout@v2
        - run: dotnet tool install -g dotnet-sonarscanner
        - run: dotnet sonarscanner begin -k:'stan0fhope' -o:'project_pizzabox_web' -d:sonar.login:'token' #activate scanner
        # k (project key) is which project, o(organization) whihc project key belongs, login for access url is where is
        - run: dotnet sonarscanner end -d:sonar.login:'token'
        # token generated from sonar cloud set-up
    
    #package: docker image
    package:
      needs:
        - analyze
      steps:
        - uses: actions/checkout@v2
        - run: docker login
        - run: docker image build -f Dockerfile -t pizzabox_web .
        # now to push to docker 
        - run: docker image tag pizzabox_web [name]/pizzabox_web
        - run: docker push [name]/pizzabox_web
        - run: docker logout 

    login:
      needs:
        - package
      runs-on: ubuntu-16.04
      steps:
        - uses: azure/login@v1
    deploy: 
      needs: 
        - package
      runs-on: ubuntu-16.04
      steps:
        - uses: azure/webapps-deploy@v2
        with: 
        # look for a dockers from azure webapps
         app-name: pizzabox2021
        # for name: pizzabox2021 ->.azurewebsites
         images: [name]/pizzabox
      

name: ci-pipeline
trigger: push
